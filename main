local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")

local localPlayer = Players.LocalPlayer

local bodyparts = {
	"HumanoidRootPart",
	"Head",
	"Left Arm",
	"Left Leg",
	"Right Arm",
	"Right Leg",
	"Torso"
}

--type PlayerCharacter = {
--	["Body Colors"]: BodyColors,
--	["Pants"]: Pants,
--	["Health"]: Script,
--	["Humanoid"]: Humanoid,
--	["Animate"]: LocalScript,
--	["Head"]: Part,
--	["HumanoidRootPart"]: Part,
--	["Left Arm"]: Part,
--	["Left Leg"]: Part,
--	["Right Arm"]: Part,
--	["Right Leg"]: Part,
--	["Torso"]: Part,

--	["Ragdolled"]: BoolValue
--}

local Character = localPlayer.Character

localPlayer.CharacterAdded:Connect(function(character)
	Character = character
end)

local stuckStates = {
	Enum.HumanoidStateType.FallingDown,
	Enum.HumanoidStateType.GettingUp,
	Enum.HumanoidStateType.Ragdoll
}

local recordedCFrames = {}

for _,bodypart in ipairs(bodyparts) do
	recordedCFrames[bodypart] = {}
end

function activate(velocity)
	--local velocity = math.round(Character["HumanoidRootPart"].Velocity.Magnitude)

	local partList = {}
	local cframeList = {}



	for _,bodypart in ipairs(bodyparts) do
		partList[#partList+1] = Character[bodypart]
		cframeList[#cframeList+1] = recordedCFrames[bodypart][#recordedCFrames[bodypart]-velocity]
		--Character[bodypart].CFrame = recordedCFrames[bodypart][#recordedCFrames[bodypart]-velocity]
	end
	workspace:BulkMoveTo(partList,cframeList,Enum.BulkMoveMode.FireCFrameChanged)
end

local c = RunService.RenderStepped:Connect(function()
	local velocity = math.round(Character["HumanoidRootPart"].Velocity.Magnitude)

	local humanoid: Humanoid = Character.Humanoid
	
	
	if Character.Ragdolled.Value or table.find(stuckStates,humanoid:GetState()) or velocity>100 then
		activate(velocity)
	else
		for _,bodypart in ipairs(bodyparts) do
			recordedCFrames[bodypart][#recordedCFrames[bodypart]+1] = Character[bodypart].CFrame*CFrame.new(Vector3.new(1,2,1))
		end
	end

end)

local disable = Instance.new("BindableFunction")
disable.OnInvoke = function()
	c:Disconnect()
	StarterGui:SetCore("SendNotification",{
		["Title"] = "Disabled",
		["Text"] = "Successfully disabled anti-ragdoll",
		["Duration"] = 2.5,
	})
end

StarterGui:SetCore("SendNotification",{
	["Title"] = "Anti-ragdoll",
	["Text"] = "Press the button below to disable anti-ragdoll.",
	["Duration"] = math.huge,
	["Callback"] = disable,
	["Button1"] = "Disable"
})
